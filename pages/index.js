import Head from "next/head";
import { useState } from "react";
import useSWR from "swr";
import RepoCard from "../components/RepoCard";
import SearchBar from "../components/SearchBar";

async function fetcher(url, username) {
  const res = await fetch(url, {
    headers: {
      username: username,
    },
  });
  if (!res.ok) {
    const error = new Error("An error occurred while fetching the data.");
    // Attach extra info to the error object.
    error.info = await res.json();
    error.status = res.status;
    throw error;
  }
  return res.json();
}

const Home = () => {
  const [searchValue, setSearchValue] = useState("");
  const { data, error } = useSWR(
    searchValue ? [`/api/github/`, searchValue] : null,
    fetcher
  );

  return (
    <>
      <Head>
        <title>GitHub Profile Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header
        className={
          "flex flex-col gap-5 items-center justify-between w-full p-4 pt-10"
        }
      >
        <h1 className={"text-3xl font-bold md:text-3xl"}>Github User Search</h1>
        <SearchBar setSearchValue={setSearchValue} />
      </header>

      <div className={"p-10"}>
        {!error && data ? (
          <>
            <div className={"mb-6"}>
              <div className={"flex gap-2 align-bottom"}>
                <h2 className={"text-2xl font-bold"}>
                  {data.name ? data.name : "No name provided"}
                </h2>
                <p
                  className={
                    "text-xs self-end leading-relaxed italic text-slate-400"
                  }
                >
                  {data.login}
                </p>
              </div>
              <p className={"text-sm text-slate-500"}>
                {data.bio ? data.bio : "No bio provided."}
              </p>
            </div>
            <ul
              className={
                "grid auto-rows-auto grid-cols-1 md:grid-cols-2 2xl:grid-cols-3  gap-2 w-full"
              }
            >
              {data.repos.length < 1 ? (
                <p>This user does not have any repos</p>
              ) : (
                data.repos.map((repo) => (
                  <RepoCard
                    key={repo.id}
                    name={repo.name}
                    description={repo.description}
                    forks={repo.forks_count}
                    stars={repo.stargazers_count}
                    visibility={repo.visibility}
                  />
                ))
              )}
            </ul>
          </>
        ) : error ? (
          <h2 className={"align-middle"}>No user by that name</h2>
        ) : (
          !data && searchValue && <h2>Loading...</h2>
        )}
      </div>
    </>
  );
};

export default Home;
